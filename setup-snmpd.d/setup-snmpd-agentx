#!/bin/bash

# Add master agentx directives & ensure (directory) permissions match

# Copyright (C) 2020 Joseph Tingiris (joseph.tingiris@gmail.com)

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Dependencies:
# setup-snmpd
# chown
# chmod
# grep
# sed

#
# 20200201, joseph.tingiris@gmail.com, created
#

if [ "${0}" == "${BASH_SOURCE}" ]; then
    printf "\naborting ... this script was executed, it must be sourced\n\n"; exit 1
fi

if [ -s "${Tmp_File}" ]; then
    debugecho "${Tmp_File} is not empty" 5

    if grep -qi ^master\ agentx ${Tmp_File} 2> /dev/null; then
        _echo "master agentx already setup" OK
    else
        debugecho "master agentx is not setup" 5
        if [ ${Install} -eq 0 ]; then
            echo "master agentx" >> "${Tmp_File}"
            if [ $? -eq 0 ]; then
                _echo "added master agentx" OK
            else
                _echo "adding master agentx failed" WARNING
                return 1
            fi
        else
            _echo "missing master agentx" WARNING
        fi
    fi

    if grep -qi ^agentXPerms\  ${Tmp_File} 2> /dev/null; then
        _echo "agentXPerms already setup" OK
    else
        debugecho "agentXPerms is not setup" 5
        if [ ${Install} -eq 0 ]; then
            echo "agentXPerms 0666 0555" >> "${Tmp_File}"
            if [ $? -eq 0 ]; then
                _echo "added agentXPerms" OK
            else
                _echo "adding agentXPerms failed" WARNING
                return 1
            fi
        else
            _echo "missing agentXPerms" WARNING
        fi
    fi

    if grep -qi ^agentXSocket\  ${Tmp_File} 2> /dev/null; then
        _echo "agentXSocket already setup" OK
    else
        debugecho "agentXSocket is not setup" 5
        if [ ${Install} -eq 0 ]; then
            echo "agentXSocket /var/agentx/master" >> "${Tmp_File}"
            if [ $? -eq 0 ]; then
                _echo "added agentXSocket" OK
            else
                _echo "adding agentXSocket failed" WARNING
            fi
        else
            _echo "missing agentXSocket" WARNING
        fi
    fi

    AgentXSocket=$(grep -i ^agentXSocket "${Tmp_File}" | awk '{print $2}')
    if [ ${#AgentXSocket} -eq 0 ]; then
        AgentXSocket="/var/agentx/master"
    fi
    debugecho "AgentXSocket=${AgentXSocket}" 10

    AgentXSocket_OK=0

    if [[ "${AgentXSocket,,}" == *"/"* ]]; then
        if [ -d "${AgentXSocket}" ]; then
            _echo "agentXSocket is a directory" WARNING
            AgentXSocket_OK=1
        else
            AgentXSocket_Directory=${AgentXSocket%/*}
            debugecho "AgentXSocket_Directory=${AgentXSocket_Directory}" 10
        fi
    else
        _echo "agentXSocket is not a file" WARNING
        AgentXSocket_OK=1
    fi

    if [ ${AgentXSocket_OK} -eq 0 ]; then
        if [ ${Install} -eq 0 ]; then
            mkdir -p "${AgentXSocket_Directory}"
            if [ $? -eq 0 ]; then
                _echo "created agentXSocket directory '${AgentXSocket_Directory}'" OK
            else
                _echo "creating agentXSocket directory  '${AgentXSocket_Directory}' failed" WARNING
                AgentXSocket_OK=1
            fi
        else
            _echo "missing agentXSocket directory" WARNING
        fi
    else
        sed -i '/^agentXSocket.*/d' "${Tmp_File}" &> /dev/null
        if [ $? -eq 0 ]; then
            _echo "removed invalid agentXSocket '$AgentXSocket'" WARNING
        else
            _echo "removing invalid agentXSocket '$AgentXSocket' failed" ERROR
            aborting "removing invalid agentXSocket '$AgentXSocket' failed"
        fi
    fi

    # agentXPerms [socket file permissions] [directory permissions] [owner] [group]
    if [ ${AgentXSocket_OK} -eq 0 ]; then
        AgentXSocket_Socket_Mode=$(grep -i ^agentXPerms "${Tmp_File}" | awk '{print $2}')
        if [ ${#AgentXSocket_Socket_Mode} -eq 0 ]; then
            AgentXSocket_Socket_Mode="0666"
        fi
        debugecho "AgentXSocket_Socket_Mode=${AgentXSocket_Socket_Mode}" 15

        AgentXSocket_Directory_Mode=$(grep -i ^agentXPerms "${Tmp_File}" | awk '{print $3}')
        if [ ${#AgentXSocket_Directory_Mode} -eq 0 ]; then
            AgentXSocket_Directory_Mode="0555"
        fi
        debugecho "AgentXSocket_Directory_Mode=${AgentXSocket_Directory_Mode}" 15

        AgentXSocket_Owner=$(grep -i ^agentXPerms "${Tmp_File}" | awk '{print $4}')
        if [ ${#AgentXSocket_Owner} -eq 0 ]; then
            AgentXSocket_Owner="root"
        fi
        debugecho "AgentXSocket_Owner=${AgentXSocket_Owner}" 15

        AgentXSocket_Group=$(grep -i ^agentXPerms "${Tmp_File}" | awk '{print $5}')
        if [ ${#AgentXSocket_Group} -eq 0 ]; then
            AgentXSocket_Group="root"
        fi
        debugecho "AgentXSocket_Group=${AgentXSocket_Group}" 15

        if [ ${Install} -eq 0 ]; then
            chown ${AgentXSocket_Owner}:${AgentXSocket_Group} "${AgentXSocket}" 2> /dev/null
            if [ $? -eq 0 ]; then
                _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket}'" OK
            else
                _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket}' failed" WARNING
            fi
        else
            _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket}' should work" OK
        fi

        if [ ${Install} -eq 0 ]; then
            chmod ${AgentXSocket_Socket_Mode} "${AgentXSocket}" 2> /dev/null
            if [ $? -eq 0 ]; then
                _echo "chmod ${AgentXSocket_Socket_Mode} '${AgentXSocket}'" OK
            else
                _echo "chmod ${AgentXSocket_Socket_Mode} '${AgentXSocket}' failed" WARNING
            fi
        else
            _echo "chmod ${AgentXSocket_Socket_Mode} '${AgentXSocket}' should work" OK
        fi

        if [ ${Install} -eq 0 ]; then
            chown ${AgentXSocket_Owner}:${AgentXSocket_Group} "${AgentXSocket_Directory}" 2> /dev/null
            if [ $? -eq 0 ]; then
                _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket_Directory}'" OK
            else
                _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket_Directory}' failed" WARNING
            fi
        else
            _echo "chown ${AgentXSocket_Owner}:${AgentXSocket_Group} '${AgentXSocket_Directory}' should work" OK
        fi

        if [ ${Install} -eq 0 ]; then
            chmod ${AgentXSocket_Directory_Mode} "${AgentXSocket_Directory}" 2> /dev/null
            if [ $? -eq 0 ]; then
                _echo "chmod ${AgentXSocket_Directory_Mode} '${AgentXSocket_Directory}'" OK
            else
                _echo "chmod ${AgentXSocket_Directory_Mode} '${AgentXSocket_Directory}' failed" WARNING
            fi
        else
            _echo "chmod ${AgentXSocket_Directory_Mode} '${AgentXSocket_Directory}' should work" OK
        fi

    fi
else
    _echo "${Tmp_File} is empty" OK
fi
